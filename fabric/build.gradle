plugins {
    id 'com.gradleup.shadow'
}

architectury {
    platformSetupLoomIde()
    fabric()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:$rootProject.fabric_loader_version"

    // carpet is essential for testing with the /player command but obviously not required
    modRuntimeOnly "maven.modrinth:carpet:${project.carpet_version}"

    implementation(project(path: ':common', configuration: 'namedElements')) { transitive = false }
    shadowBundle(project(path: ':common', configuration: 'namedElements')) { transitive = false }
}

processResources {
    inputs.property 'version', rootProject.mod_version

    filesMatching('fabric.mod.json') {
        expand version: rootProject.mod_version
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    inputFile.set shadowJar.archiveFile
}
